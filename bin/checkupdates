#!/usr/bin/env python3
"""Check and highlight both repo and AUR updates."""

import re
import subprocess
from termcolor import colored

aur_updates = subprocess.check_output(["yay", "--aur", "-Pu"], encoding="ascii")
repo_updates = subprocess.check_output(["/usr/bin/checkupdates"], encoding="ascii")

STRIP_ANSI_CODES_RE = re.compile(r"\x1b\[[^\x1b]*?m")

# Instead of parsing version strings it's way simpler to just simply ignore the
# last group
VERSION_GROUP_RE = re.compile(r"\d+")
STRIP_PACKAGE_REVISION_RE = re.compile(r"^(.+)-.+?$")

# Upgrading these packages might break things, so we'll highlight them
# separately. Manjaro calls the NVIDIA driver `linux4XX-nvidia`, so we have to
# use a regexp here.
SPECIAL_PACKAGES_RE = re.compile(r"^(linux(\d{3}(-nvidia)?)?|nvidia)$")


def get_major_minor_version(full_version_string):
    version = STRIP_PACKAGE_REVISION_RE.match(full_version_string)[1]

    return VERSION_GROUP_RE.findall(version)[:-1]


def highlight_upgrades(diff):
    """Highlight major/minor version upgrades and special packages."""

    # The AUR updates already contain ANSI color codes, which have to be stripped first
    diff = STRIP_ANSI_CODES_RE.sub("", diff)

    output = []
    for line in diff.splitlines():
        name, old_version, _, new_version = line.split(" ")
        old_mm = get_major_minor_version(old_version)
        new_mm = get_major_minor_version(new_version)

        format_attrs = ["bold"] if SPECIAL_PACKAGES_RE.match(name) else []
        format_color = "green" if old_mm != new_mm else None

        output.append(colored(line, format_color, attrs=format_attrs))

    return "\n".join(output)


print(highlight_upgrades(repo_updates))
if aur_updates:
    print(f"\n{colored('Aur updates', attrs=['bold'])}:")
    print(highlight_upgrades(aur_updates))
