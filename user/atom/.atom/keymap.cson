# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * http://flight-manual.atom.io/using-atom/sections/basic-customization/#_customizing_keybindings
# * http://flight-manual.atom.io/behind-atom/sections/keymaps-in-depth/
#
# If you're having trouble with your keybindings not working, try the
# Keybinding Resolver: `Cmd+.` on macOS and `Ctrl+.` on other platforms. See the
# Debugging Guide for more information:
# * http://flight-manual.atom.io/hacking-atom/sections/debugging/#check-the-keybindings
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson
'atom-text-editor.vim-mode-plus.normal-mode':
    'ctrl-alt-f': 'find-and-replace:show'

    # ex mode
    ':': 'vim-mode-plus-ex-mode:open'
    '!': 'vim-mode-plus-ex-mode:toggle-setting'

    # vim-surround
    'y s': 'vim-mode-plus:surround'
    'y s w': 'vim-mode-plus:surround-word'

    'd s': 'vim-mode-plus:delete-surround'
    # 'd s': 'vim-mode-plus:delete-surround-any-pair'
    # 'd s': 'vim-mode-plus:delete-surround-any-pair-allow-forwarding'

    'c s': 'vim-mode-plus:change-surround'
    # 'y s c': 'vim-mode-plus:change-surround-any-pair'
    # 'y s c': 'vim-mode-plus:change-surround-any-pair-allow-forwarding'

    'y m s': 'vim-mode-plus:map-surround'

    # cursor history
    'ctrl-i': 'cursor-history:next'
    'ctrl-o': 'cursor-history:prev'
    'ctrl-alt-i': 'cursor-history:next-within-editor'
    'ctrl-alt-o': 'cursor-history:prev-within-editor'

    # unimpaired bindings
    '[ q': 'linter:previous-error'
    '] q': 'linter:next-error'

    ', =': 'atom-beautify:beautify-editor'
    'g d': 'autocomplete-python:go-to-definition'

    'Q': 'atom-keyboard-macros:call_last_kbd_macro'
