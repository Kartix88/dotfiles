#!/usr/bin/env python3
#
# Lists the length of every file in the current directory

from multiprocessing import Pool
import glob
import os
import sys

from pymediainfo import MediaInfo


def get_runtime(filename):
    tracks = MediaInfo.parse(filename).tracks
    if not tracks or tracks[0].duration is None:
        return None

    duration = int(tracks[0].duration / 1000)
    minutes, seconds = divmod(duration, 60)
    hours, minutes = divmod(minutes, 60)
    runtime = f"{seconds}s"
    if minutes > 0:
        runtime = f"{minutes}m " + runtime
    if hours > 0:
        runtime = f"{hours}h " + runtime

    return f"{filename} :: {runtime}"


args = sys.argv if len(sys.argv) > 1 else ["."]
with Pool(8) as p:
    # Recursively expand all directories
    files = list(
        set(
            f
            for arg in args
            for f in (
                glob.glob(os.path.join(arg, "**"), recursive=True)
                if os.path.isdir(arg)
                # Cannonicalizing these paths prevents duplicates from the glob
                # above
                else [os.path.join(".", arg)]
            )
            if not os.path.isdir(f)
        )
    )
    lengths = [s for s in p.imap_unordered(get_runtime, files) if s is not None]

    print("\n".join(sorted(lengths)))
