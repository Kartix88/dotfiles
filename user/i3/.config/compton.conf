shadow = true;
fading = true;
fade-delta = 3;
#inactive-opacity = 0.95;
inactive-opacity = 0.9;

blur-background-frame = true;
blur-kernel = "5x5gaussian";

focus-exclude = [
  "class_g = 'plasmashell'",
  "name = 'Plasma'",
  "class_g = 'slop'",
  "name *= 'mpv'",
  "_NET_WM_NAME@:s = 'rofi'"
];

shadow-exclude = [
  # Preselect area in bspwm
  "class_g = 'Bspwm' && class_i = 'presel_feedback'",
  # Screenshot selection rectangle
  "class_g = 'slop'",
  # WIndow decoration/tab bar in i3
  "class_g = 'i3-frame'",
  # Vokoscreen recording area
  "name = 'vokoscreen'",
  "name = 'The Witcher 2 Launcher'"
];

opacity-rule = [
  "25:class_g = 'Bspwm' && class_i = 'presel_feedback'"
];

blur-background-exclude = [
  # Screenshot selection rectangle
  "class_g = 'slop'",
  "name = 'The Witcher 2 Launcher'"
];

unredir-if-possible-exclude = [
  "class_g = 'mpv'"
];

# Only context menus should receive some form of transparency
wintypes:
{
  combo = {fade = false; shadow = false; focus = true;};
  dnd = {shadow = false; focus = true;};
  menu = {fade = false; shadow = false; focus = true;};
  dropdown_menu = {fade = false; shadow = false; focus = true;};
  popup_menu = {fade = false; shadow = false; focus = false;};
  utility = {fade = false; shadow = false; focus = true;};
};
#
# WM fixes
#

# Use EWMH _NET_WM_ACTIVE_WINDOW to determine which window is focused instead 
# of using FocusIn/Out events. Usually more reliable but depends on a
# EWMH-compliant WM.
use-ewmh-active-win = true;
# Detect rounded corners and treat them as rectangular when
# --shadow-ignore-shaped is on.
detect-rounded-corners = true;
# Detect _NET_WM_OPACITY on client windows, useful for window managers not
# passing _NET_WM_OPACITY of client windows to frame windows.  This prevents
# opacity being ignored for some apps.  For example without this enabled my
# xfce4-notifyd is 100% opacity no matter what.
detect-client-opacity = true;
# Clip shadows behind windows, required for transparent windows
clear-shadow = true;
# Don't draw shadows behind elements that shouldn't receive any shadows
# (e.g. polybar's tray)
respect-prop-shadow = true;
# Bypass the compositor when using full-screen applications, thus limiting
# performance impact and input latency and enabling G-Sync
unredir-if-possible = true;

#
# Backend
#

backend = "glx";
glx-no-stencil = true;
# See `man compton`
vsync = "opengl-swc";
glx-swap-method = "buffer-age";
# Seems to slow rendering down a lot when the whole screen is updated at once
glx-copy-from-front = false;
# May break vsync and doesn't support all drivers
glx-use-copysubbuffermesa = false;
# Probably could improve performance on rapid window content changes, but is 
# known to break things on some drivers (LLVMpipe).
glx-no-rebind-pixmap = true;
# Paint on an overlay window instead of directly
paint-on-overlay = true;
# Additionally use X Sync fence to sync clients' draw calls. Needed on
# nvidia-drivers with GLX backend for some users. May be disabled at compile
# time with NO_XSYNC=1.
xrender-sync-fence = true;

# vim:filetype=conf
